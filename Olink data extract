# Load packages
library(dplyr)
library(janitor)
library(tidyr)
library(ggplot2)
library(readxl)
library(writexl)
library(lubridate)
library(data.table)
library(psych)
library(tidyverse)
library(gtsummary)
library(gapminder)


## PD LIST 

# import OPDC data and select instruments of interest
OPDC_PD <- read.csv("~/Documents/R/OPDC/OPDCDiscoveryCohort_ALL_DATA_PD.csv")

OPDC_PD_selected <- OPDC_PD %>% 
        select(subjid, dob, gender, visit_date, x_1_onest_date, x_2_diag_date, ak_1_has_pd, ak_2_meets_criteria, converted_to_pd, converted_to_pd_r, converted_to_other, converted_to_other_diag,converted_subjid_2, alternate_diag, alternate_diag_1, alternate_diag_specify) %>%
        rename(ID = subjid, date_onset = x_1_onest_date, date_diagnosis = x_2_diag_date, likelihood_PD = ak_1_has_pd, meets_UKBB = ak_2_meets_criteria, old_ID = converted_subjid_2) %>%
        mutate(dob = as.Date(dob), visit_date = as.Date(visit_date), date_onset = as.Date(date_onset), date_diagnosis = as.Date(date_diagnosis)) %>%
        mutate(gender = replace(gender, gender == 0, "male"), gender = replace(gender, gender == 1, "female"))


# identify IDs of PD patients with an alternative diagnosis (1 = Yes, patient has alternate diagnosis) and remove them 
OPDC_PD_alternate <- subset(OPDC_PD_selected, alternate_diag == 1 | converted_to_other == 1)

## Alternate diagnoses list 
# 1 MSA (Multiple system atrophy)
# 2 PSP (Progressive supranuclear palsy)
# 3 MND (Motor neuron disease)
# 4 PAF (Pure autonomic failure)
# 5 DLB (Dementia with Lewy bodies)
# 6 AD (Alzheimer's disease)
# 7 Vascular dementia
# 8 Vascular PD
# 9 Cerebellar ataxia
# 10 Essential tremor
# 11 Dystonic tremor
# 12 Atypical Tremor
# 13 Other (Specify below)

PD_alternate_dx_list <- OPDC_PD_alternate[["ID"]]
PD_alternate_dx_list <- unique(PD_alternate_dx_list)
OPDC_PD_pure <- OPDC_PD_selected[!OPDC_PD_selected$ID %in% PD_alternate_dx_list, ]
OPDC_PD_pure <- subset(OPDC_PD_pure, select = -c(converted_to_pd, converted_to_pd_r, converted_to_other, converted_to_other_diag, alternate_diag, alternate_diag_1, alternate_diag_specify, old_ID))

# Number of PD particpants with pure PD = 1038
n_distinct(OPDC_PD_pure$ID)

# Select all rows (participant visits) that at SOME point had a likelihood score recorded
OPDC_PD_likelihood <- OPDC_PD_pure[!is.na(OPDC_PD_pure$likelihood_PD), ]

# Select the latest visit date for each likelihood score and then select the participants that have a likelihood score of >= 85%
OPDC_PD_pure_sure <- OPDC_PD_likelihood %>% 
                        group_by(ID) %>% 
                        top_n(1, visit_date) %>%
                        subset(likelihood_PD >= 85)

# Creates an ID list of OPDC_PD_pure_sure
PD_ID_list <- OPDC_PD_pure_sure[["ID"]]
PD_ID_list <- unique(PD_ID_list)

# Number of PD particpants with pure, sure PD = 995
n_distinct(OPDC_PD_pure_sure$ID)


# Condenses OPDC data to only have IDs with a corresponding DOB and date of onset & diagnosis (used later)
OPDC_PD_pure[OPDC_PD_pure == ''] <- NA    # changes the character vector " " into NA
OPDC_PD_data <- OPDC_PD_pure[!is.na(OPDC_PD_pure$dob),]
OPDC_PD_data <- subset(OPDC_PD_data, select = -c(visit_date, meets_UKBB))


# import biobank data and select variables of interest
OPDC_biobank_PD <- read.csv("~/Documents/R/OPDC/OPDCBiobank_DATA_PD_SERUM.csv")

OPDC_biobank_PD_selected <- OPDC_biobank_PD %>%
        select(subjid, redcap_event_name, bb_serum_date, bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw) %>% 
        rename(ID = subjid, visit = redcap_event_name, serum_date = bb_serum_date) %>%
        mutate(serum_date = as.Date(serum_date)) %>%
        mutate(diagnosis = substring(visit, 13,13)) %>%
        relocate(diagnosis, .after = ID) %>%
        mutate(diagnosis = replace(diagnosis, diagnosis == "1", "PD")) %>%
        mutate(visit = substring(visit, 7,7)) %>%
        mutate(status = bb_s_1_status + bb_s_2_status + bb_s_3_status + bb_s_4_status + bb_s_5_status) %>%
        mutate(status = ifelse(status == 10, "consumed", "active"))  # 2 = consumed, active = 1

# Select out the IDs in the OPDC_PD_pure_sure list 
OPDC_biobank_PD_pure_sure <- OPDC_biobank_PD_selected[OPDC_biobank_PD_selected$ID %in% PD_ID_list, ]

# creates manifest and adds on the OPDC clinical data
PD_Olink_manifest <- left_join(OPDC_biobank_PD_pure_sure, OPDC_PD_data, by = "ID")

# Adds on further variables required for the manifest 
PD_Olink_manifest$age_at_sampling <- round((PD_Olink_manifest$dob %--% PD_Olink_manifest$serum_date) / years(1), digit = 2)
PD_Olink_manifest$latency_from_PD_motor <- round((PD_Olink_manifest$date_onset %--% PD_Olink_manifest$serum_date) / years(1), digit = 2)
PD_Olink_manifest$latency_from_PD_diagnosis <- round((PD_Olink_manifest$date_diagnosis %--% PD_Olink_manifest$serum_date) / years(1), digit = 2)

# import cluster data and rename variables 
OPDC_PD_clusters <- read_excel("~/Documents/R/OPDC/Discovery_PD_clusters.xlsx")                              
OPDC_PD_clusters <- OPDC_PD_clusters %>% rename (ID = SubjID, cluster = clusters)                           

# add cluster data to manifest
PD_Olink_manifest <- left_join(PD_Olink_manifest, OPDC_PD_clusters, by = "ID")

# rearrange columns 
PD_Olink_manifest <- PD_Olink_manifest %>% 
        relocate(bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw, .after = cluster)

# remove consumed samples and change serum_date to year only
PD_Olink_manifest <- subset(PD_Olink_manifest, status == "active" | is.na(status) > 0)
PD_Olink_manifest$serum_date <- format(PD_Olink_manifest$serum_date, "%Y")

# selects PD samples with <3.5 years of diagnosis at visit 1 (baseline)
PD_Olink_manifest_visit_1_latency_3.5 <- subset(PD_Olink_manifest, visit == 1 & latency_from_PD_diagnosis < 3.5)
write_xlsx(PD_Olink_manifest_visit_1_latency_3.5, "~/Documents/R/OPDC/PD_Olink_manifest_vist_1_3.5.xlsx") # save list to excel file

# selects PD samples from visit 3
PD_Olink_manifest_visit_3 <- subset(PD_Olink_manifest, visit == 3)
write_xlsx(PD_Olink_manifest_visit_3,"~/Documents/R/OPDC/PD_Olink_manifest_vist_3.xlsx") # save list to excel file




## RBD LIST 

# import OPDC data and select instruments of interest
OPDC_RBD <- read.csv("~/Documents/R/OPDC/OPDCDiscoveryCohort_ALL_DATA_RBD.csv")

OPDC_RBD_selected <- OPDC_RBD %>% 
        select(subjid, dob, gender, x_1_1_rbd_symptom_date, x_1_2_rbd_diag_date, converted_to_pd, converted_to_pd_r, converted_to_other, converted_to_other_diag,converted_subjid_2, alternate_diag, alternate_diag_1, alternate_diag_specify) %>%
        rename(ID = subjid, date_onset = x_1_1_rbd_symptom_date, date_diagnosis = x_1_2_rbd_diag_date) %>%
        mutate(dob = as.Date(dob)) %>%
        mutate(gender = replace(gender, gender == 0, "male"), gender = replace(gender, gender == 1, "female"))


# Condenses data to only have IDs with corresponding clinical data (DOB, date of diagnosis, etc)
OPDC_RBD_selected[OPDC_RBD_selected == ''] <- NA    # changes the character vector " " into NA
OPDC_RBD_data <- OPDC_RBD_selected[!is.na(OPDC_RBD_selected$dob),]
OPDC_RBD_data <- subset(OPDC_RBD_data, select = -c(converted_to_pd, converted_to_pd_r, converted_to_other, converted_to_other_diag,converted_subjid_2, alternate_diag, alternate_diag_1, alternate_diag_specify))


# import biobank data and select variables of interest
OPDC_biobank_RBD <- read.csv("~/Documents/R/OPDC/OPDCBiobank_DATA_RBD_SERUM.csv")

OPDC_biobank_RBD_selected <- OPDC_biobank_RBD %>%
        select(subjid, redcap_event_name, bb_serum_date, bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw) %>% 
        rename(ID = subjid, visit = redcap_event_name, serum_date = bb_serum_date) %>%
        mutate(serum_date = as.Date(serum_date)) %>%
        mutate(diagnosis = "RBD") %>%
        relocate(diagnosis, .after = ID) %>%
        mutate(visit = substring(visit, 7,7)) %>%
        mutate(status = bb_s_1_status + bb_s_2_status + bb_s_3_status + bb_s_4_status + bb_s_5_status) %>%
        mutate(status = ifelse(status == 10, "consumed", "active"))  # 2 = consumed, active = 1


# select IDs where serum_date is missing 
RBD_serum_date_missing <- OPDC_biobank_RBD_selected[is.na(OPDC_biobank_RBD_selected$serum_date),]
write_xlsx(RBD_serum_date_missing, "~/Documents/R/OPDC/RBD_serum_date_missing.xlsx")

# Removes IDs where no serum date is recorded 
OPDC_biobank_RBD_selected_true <- OPDC_biobank_RBD_selected[!is.na(OPDC_biobank_RBD_selected$serum_date),]


# creates manifest and adds on the clinical data 
RBD_Olink_manifest <- left_join(OPDC_biobank_RBD_selected_true, OPDC_RBD_data, by = "ID")

# adds on variables needed for the manifest 
RBD_Olink_manifest$age_at_sampling <- round((RBD_Olink_manifest$dob %--% RBD_Olink_manifest$serum_date) / years(1), digit = 2)
RBD_Olink_manifest$latency_from_RBD_sx <- round((RBD_Olink_manifest$date_onset %--% RBD_Olink_manifest$serum_date) / years(1), digit = 2)
RBD_Olink_manifest$latency_from_RBD_diagnosis <- round((RBD_Olink_manifest$date_diagnosis %--% RBD_Olink_manifest$serum_date) / years(1), digit = 2)

# rearrange columns 
RBD_Olink_manifest <- RBD_Olink_manifest %>% 
        relocate(bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw, .after = latency_from_RBD_diagnosis) %>%
        relocate(status, .after = serum_date)

# change serum_date to year only 
RBD_Olink_manifest$serum_date <- format(RBD_Olink_manifest$serum_date, "%Y")

# selects RBD samples from visit 1
RBD_Olink_manifest_visit_1 <- subset(RBD_Olink_manifest, visit == 1)
write_xlsx(RBD_Olink_manifest_visit_1, "~/Documents/R/OPDC/RBD_Olink_manifest_visit_1.xlsx")

# selects RBD samples from visit 3
RBD_Olink_manifest_visit_3 <- subset(RBD_Olink_manifest, visit == 3)
write_xlsx(RBD_Olink_manifest_visit_3, "~/Documents/R/OPDC/RBD_Olink_manifest_visit_3.xlsx")





## Control LIST 

# import OPDC data and select instruments of interest
OPDC_Control <- read.csv("~/Documents/R/OPDC/OPDCDiscoveryCohort_ALL_DATA_CONTROL.csv")

OPDC_Control_selected <- OPDC_Control %>% 
        select(subjid, dob, gender, converted_to_other, converted_to_other_diag, alternate_diag, alternate_diag_1, alternate_diag_specify) %>%
        rename(ID = subjid) %>%
        mutate(dob = as.Date(dob)) %>%
        mutate(gender = replace(gender, gender == 0, "male"), gender = replace(gender, gender == 1, "female"))


# identify IDs of control patients with an alternative diagnosis (1 = Yes, patient has alternate diagnosis) and remove them 
OPDC_Control_alternate <- subset(OPDC_Control_selected, alternate_diag == 1 | converted_to_other == 1)
Control_alternate_dx_list <- OPDC_Control_alternate[["ID"]]
Control_alternate_dx_list <- unique(Control_alternate_dx_list)
OPDC_Control_pure <- OPDC_Control_selected[!OPDC_Control_selected$ID %in% Control_alternate_dx_list, ]
OPDC_Control_pure <- subset(OPDC_Control_pure, select = -c(converted_to_other, converted_to_other_diag, alternate_diag, alternate_diag_1, alternate_diag_specify))


# Condenses data to only have IDs with a corresponding DOB and gender
OPDC_Control_pure[OPDC_Control_pure == ''] <- NA    # changes the character vector " " into NA
OPDC_Control_data <- OPDC_Control_pure[!is.na(OPDC_Control_pure$dob),]

# Creates a list of OPDC_Control_data IDs
Control_ID_list <- OPDC_Control_data[["ID"]]
Control_ID_list <- unique(Control_ID_list)


# import biobank data and select variables of interest
OPDC_biobank_Control <- read.csv("~/Documents/R/OPDC/OPDCBiobank_DATA_CONTROL_SERUM.csv")

OPDC_biobank_Control_selected <- OPDC_biobank_Control %>%
        select(subjid, redcap_event_name, bb_serum_date, bb_addserum_date, bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw) %>% 
        rename(ID = subjid, visit = redcap_event_name, serum_date = bb_serum_date) %>%
        mutate(serum_date = as.Date(serum_date), bb_addserum_date = as.Date(bb_addserum_date)) %>%
        mutate(diagnosis = "Control") %>%
        relocate(diagnosis, .after = ID) %>%
        mutate(visit = substring(visit, 7,7)) %>%
        mutate(visit = replace(visit, visit == "_", "2")) %>%
        mutate(status = bb_s_1_status + bb_s_2_status + bb_s_3_status + bb_s_4_status + bb_s_5_status) %>%
        mutate(status = ifelse(status == 10, "consumed", "active"))  # 2 = consumed, active = 1

# Select out the IDs in the OPDC_Control_pure list 
OPDC_biobank_Control_pure <- OPDC_biobank_Control_selected[OPDC_biobank_Control_selected$ID %in% Control_ID_list, ]


# creates manifest and adds on the variables of interest 
Control_Olink_manifest <- left_join(OPDC_biobank_Control_pure, OPDC_Control_data, by = "ID")
Control_Olink_manifest$age_at_sampling <- trunc((Control_Olink_manifest$dob %--% Control_Olink_manifest$serum_date) / years(1))

# rearrange columns 
Control_Olink_manifest <- Control_Olink_manifest %>% 
        relocate(bb_s_1_status, bb_s_1_used, bb_s_1_freezethaw, bb_s_2_status, bb_s_2_used, bb_s_2_freezethaw, bb_s_3_status, bb_s_3_used, bb_s_3_freezethaw, bb_s_4_status, bb_s_4_used, bb_s_4_freezethaw,bb_s_5_status, bb_s_5_used, bb_s_5_freezethaw, .after = age_at_sampling) %>%
        relocate(status, .after = age_at_sampling)


# remove consumed samples
Control_Olink_manifest_active <- subset(Control_Olink_manifest, status == "active" | is.na(status) > 0)


# selects Control samples from visit 1 (and changing serum date to year only)
Control_Olink_manifest_visit_1 <- subset(Control_Olink_manifest_active, visit == 1)
Control_Olink_manifest_visit_1$serum_date <- format(Control_Olink_manifest_visit_1$serum_date, "%Y")
Control_Olink_manifest_visit_1$bb_addserum_date <- format(Control_Olink_manifest_visit_1$bb_addserum_date, "%Y")

write_xlsx(Control_Olink_manifest_visit_1, "~/Documents/R/OPDC/Control_Olink_manifest_visit_1.xlsx")


# selects Control samples from visit 2 (and changing serum date to year only)
Control_Olink_manifest_visit_2 <- subset(Control_Olink_manifest_active, visit == 2)
Control_Olink_manifest_visit_2$serum_date <- format(Control_Olink_manifest_visit_2$serum_date, "%Y")
Control_Olink_manifest_visit_2$bb_addserum_date <- format(Control_Olink_manifest_visit_2$bb_addserum_date, "%Y")

write_xlsx(Control_Olink_manifest_visit_2, "~/Documents/R/OPDC/Control_Olink_manifest_visit_2.xlsx")

